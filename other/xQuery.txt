XQuery Details
    - it's built over XPath so every XPath expression is valid
    - a XQuery file should always return something
    

XQuery Syntax

    - declare namespace ns:="namespace";
        - make sure that you don't have any typo in here

    - declare option output:indent "yes";
        - there are many other options that can be added

    - declare variable $var := 3 - declaration of a variable and the assignment of its value

    - declare variable $var as <type> external - loads a variable received as a command line parameter
        - the available types are: 

    - declare function local:functionName($parameter) as element() 
        {
            return <ns:param>$parameter</ns:param> 
        }               
            - the element() parameter specifies the return type
            - to be used the functions should also be called inside a script, not only declared

    - doc("file.xml") - used to open a xml file
                      - XPath expression can be used directly on document (ex: doc("file.xml")/bookstore/book/title)

    - [] - it's called a predicate that limits the extracted data, just like an XPath condition
          - ex: doc("books.xml")/bookstore/book[price<30]

    - The FLOWR expression
        - comes from For, Let, Where, Order By and Return
        - syntax:
            for $x in $variable
            let $title = $x/title
            order by $x/year desc
            where $x/price < 30
            return $title

            - For
                - used to iterate over a collection of data
            
            - Let
                - assign a volatile variable, based on the current value of $

            Order By
                - orders the resulted collection after a condition
            
            Where
                - condition to determine if the element respects some parameters
            
            Return
                - returns from a collection the selected entities which passes the conditions, into a sorted list