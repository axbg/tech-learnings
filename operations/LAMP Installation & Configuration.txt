Installing & Configuring LAMP

>>Apache was already installed in the previous lesson<<

-> To create a local DNS in Windows access "C:\Windows\System32\drivers\etc" and add server's ip address and a custom link
-------------------------------------------------------------------------------------------------------

ufw - "uncomplicated firewall" - default firewall for ubuntu

->We have to let apache receive incoming traffic by configuring ufw

(sudo) ufw app list - displays all the profiles available in ufw for installed apps
(sudo) ufw app info "<<app_name>>" - displays informations about a certain profile
(sudo) ufw allow in "<<app_name>>" - allow incoming traffic for a certain profile

------------------------------------------------------------------------------------------------------

MySQL Installation

(sudo) apt-get install mysql-server

-> run "mysql_secure_installation" - runs a script that helps securing the freshly installed MySql

-------------------------------------------------------------------------------------------------------

PHP Installation

-> (sudo) apt-get install php libapache2-mod-php php-mcrypt php-mysql

-> After installation, check the "etc/apache2/mods-enabled/dir.conf" file and place the "index.php" right before Directory Index
		-> now index.php will be displayed with priority

-> After configuring, run "systemctl restart apache2" to apply the changes

-> To see the available packages for an app run "apt-cache search <<app_name>>- | less"
		-> example for php "apt-cache search php- | less"

--------------------------------------------------------------------------------------------------------

VirtualHosts Setup

-> create a new directory in /var/www
-> grant owner permissions on the current user (chown -R user:user <<dir_name>>)
-> make sure that /var/www has 755 permissions
-> create some basic .php or .html to make sure that everything works fine
-> configure a new .conf in /etc/apache2/sites-available (ServerName, ServerAdmin, ServerAlias, DocumentRoot and log files are important)
-> create a .log file in /var/log/apache2 with the same name declared in the new created .conf
-> sudo a2ensite <<your_name>>.conf - to enable the created .conf
-> restart server ("systemctl restart apache2")

(to check if everything works fine locally, you have to add the new links in the host file, using the same IP and the url written in .conf)

--------------------------------------------------------------------------------------------------------

Configure and add SSL Certificates
-> for every website with an ssl certificate, it's recommended to create a new .conf

-> in your .conf add
	SSLCertificateFile	/etc/ssl/certs/ssl-cert-snakeoil.pem
    SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key
    and modify port 80 to 443

 -> enable conf with "a2enconf <<nume.conf>>"

->enable ssl with "sudo a2en mod" the .conf and restart apache (only once)

-> the self-signed ssl is installed as default with apache, but won't work in production
-> to add a real SSL, copy ssl documents in /etc/ssl/certs and /etc/ssl/private and change the paths above (example: let's encrypt)

-> to modify the /private directory, your user have to be member of "ssl-cert" group
	-> sudo adduser <<user_name>> <<group_name>>
	-> to check if user was added install members (sudo apt-get install members)
	-> run "members <<group_name>>"

-------------------------------------------------------------------------------------------------------


